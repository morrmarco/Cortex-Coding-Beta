*****************************************************************************************

                                                Warning!

      Please note that you need to change the user ID (u58717790) to your own user ID!

                                   
*****************************************************************************************;

libname cortex '/home/u58717790/my_shared_file_links/u39842936/Cortex Data Sets';
libname results '/home/u58717790/results';


* Merge datasets 'hist' and 'target_rd2'. Also, you need to filter the data
===========================================================================;
DATA model_rd2_prob; 
   MERGE cortex.hist cortex.target_rd2;
   BY ID;
run;

* Delete missing values
============================================================================;
* You should come up with your own strategy to handle missing values;
data results.model_rd2_prob; 
set model_rd2_prob;
if not cmiss(of _numeric_);
run;


* Split the data randomly (srs) into 2 samples: train = 0.6 and validation=0.4
===============================================================================;
proc surveyselect data=results.model_rd2_prob rate=0.6 
out=  donor_select outall
method=srs
seed =1234; 
run;

data results.train_rd2_prob results.test_rd2_prob; 
set donor_select; 
if selected =1 then output results.train_rd2_prob; 
else output results.test_rd2_prob; 
run;


* Build models
=============================================================================;

******************* Logistic regression model *********************;
ods graphics on;
proc logistic data=results.train_rd2_prob;
model gaveThisYear(EVENT='1')=Age Salary Seniority GaveLastYear contact ;
score data=results.train_rd2_prob fitstat outroc=T_roc;
score data=results.test_rd2_prob fitstat outroc=V_roc;
ROC;
code file='/home/u58717790/Results/regression_2_prob.sas';
 run;


***************** Decision tree model **********;

proc hpsplit data= donor_select  /*minleafsize=100  nsurregate=2 assignmissing=popular 
 maxbranch=2 mincatsize=50 maxdepth=12*/;
class GaveThisYear ;
model GaveThisYear (EVENT='1') = GaveLastYear Seniority contact Age Salary ;
partition roleVar=Selected(train='1' validate='0');
grow gini;
prune costcomplexity;
code file='/home/u58717790/Results/decisiontree_2_prob.sas';
quit;



* Prepare and score new data based on your champion model for members who where contacted
===============================================================================;

* Merge datasets 'score' and 'score_rd2_contact;
DATA contact_rd2;
   MERGE cortex.score cortex.score_rd2_contact;
   BY ID;
run;


*Preform the same strategy for handling missing values for the score dataset;
*In this case, 'Delete missing values';

data results.contact_rd2;
set contact_rd2;
if not cmiss(of _numeric_);
run;


data results.predcontact (keep= id p_gavethisyear rename=(p_gavethisyear=PContact));
set results.contact_rd2;
%include '/home/u58717790/Results/regression_2_prob.sas';
run;


* Prepare and score new data based on your champion model for members who where not contacted
=============================================================================================;

/*Merge datasets 'score' and 'score_rd2_nocontact*/

DATA nocontact_rd2;
   MERGE cortex.score cortex.SCORE_RD2_NOCONTACT;
   BY ID;
run;

*Delete missing values;
data results.nocontact_rd2; 
set nocontact_rd2;
if not cmiss(of _numeric_);
run;


data results.prednoncontact (keep= id p_gavethisyear rename=(p_gavethisyear=PNoContact));
set results.nocontact_rd2;
%include '/home/u58717790/Results/regression_2_prob.sas';
run;


 
*Merge data;
DATA results.rd2_output_prob;
   MERGE results.predcontact results.prednoncontact;
   BY ID;
run; 

*Export data;
proc export data=results.rd2_output_prob
outfile="/home/u58717790/Results/Round2 Output prob.xlsx" dbms=xlsx
replace;
run;
